name: ci.yml

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [dev]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: 🛠️ Backend Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: ✅ Checkout Backend Code
        uses: actions/checkout@v4

      - name: ⚙️ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: ♻️ Gradle Cache 설정 (backend 디렉토리 기준)
        uses: actions/cache@v3
        with:
          path: |
            backend/.gradle/caches
            backend/.gradle/wrapper
            backend/gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties', 'backend/**/gradle-wrapper.jar') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: 🔐 gradlew 실행 권한 부여
        working-directory: backend
        run: chmod +x ./gradlew

      - name: 🔍 Run Backend Tests
        working-directory: backend
        run: ./gradlew clean test --no-daemon

  frontend:
    name: 🎨 Frontend Lint & Build
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Frontend Code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      #오예록
      #테스트 용도
      - name: 🧹 Clean TS & Next cache
        working-directory: frontend
        run: |
          rm -rf .next
          rm -rf node_modules/.cache
          rm -f tsconfig.tsbuildinfo

      - name: 🧪 Debug .next/types 존재 여부
        working-directory: frontend
        run: find .next/types || echo "No .next/types found"
      # 여기까지

      - name: 📦 Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: 🧪 Lint & Build
        working-directory: frontend
        run: |
          npm run lint
          npm run build

  # docker:
  #   name: 🐳 Docker Build Check
  #   runs-on: ubuntu-latest
  #   needs: [frontend, backend]

  #   steps:
  #     - name: ✅ Checkout Code
  #       uses: actions/checkout@v4

  #     - name: 🔧 Docker Build Test (frontend)
  #       run: docker build -f infra/docker/Dockerfile.frontend -t jibangyoung-frontend:latest .

  #     - name: 🔧 Docker Build Test (backend)
  #       run: docker build -f infra/docker/Dockerfile.backend -t jibangyoung-backend:latest .

  # vercel:
  #   name: ▲ Deploy to Vercel
  #   runs-on: ubuntu-latest
  #   needs: frontend

  #   steps:
  #     - name: ✅ Checkout Code
  #       uses: actions/checkout@v4

  #     - name: ⚙️ Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: 🔐 Install Vercel CLI
  #       run: npm install -g vercel@25.1.0

  #     - name: 🚀 Deploy to Vercel (Production)
  #       run: |
  #         vercel --token=${{ secrets.VERCEL_TOKEN }} \
  #                --prod \
  #                --yes \
  #                --cwd frontend
